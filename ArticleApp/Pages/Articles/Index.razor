@page "/Articles"
@page "/Articles/Index"

@using ArticleApp.Models
@using ArticleApp.Data
@using ArticleApp.Models.Articles;
@inject IArticleRepository ArticleRepository

@using Dul.Domain.Common;
@using Dul.Web;
@using ArticleApp.Pages.Articles.Components

<h3>Index</h3>

<div>
    <a href="/Articles/Create" class="btn btn-primary">Create</a>
</div>

@if (articles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Title</th>
                @*<th>Content</th>*@
                <th>Created</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in articles)
            {
                <tr>
                    <td>@article.Id</td>
                    <td>@article.Title</td>
                    @*<td>@article.Content</td>*@
                    <td>@article.Created.ToShortTimeString()</td>
                    <td>
                        <a href="/Articles/Details/@article.Id" class="btn btn-light">Details</a>
                        <a href="/Articles/Edit/@article.Id" class="btn btn-light">Edit</a>
                        <a href="/Articles/Delete/@article.Id" class="btn btn-light">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


<ArticlePager Model="pager" PageIndexChanged="PageIndexChanged">

</ArticlePager>

@*@pager.PageCount
@pager.PageNumber
@pager.PageIndex*@

@code {
    // Pager basic value
    private PagerBase pager = new PagerBase()
        {
            PageNumber = 1,
            PageIndex = 0,
            PageSize = 3,
            PagerButtonCount = 5
        };
    private List<Article> articles;

    protected override async Task OnInitializedAsync()
    {
        //[1]display all data
        //articles = await ArticleRepository.GetArticlesAsync();

        //[2] display paging data
        PagingResult<Article> PagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = PagingData.TotalRecords;
        articles = PagingData.Records.ToList();
    }

    // Page buttton Click Callback
    private async void PageIndexChanged(int pageIndex)
    {
        pager.PageIndex = pageIndex;
        pager.PageNumber = pageIndex + 1;

        var PagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = PagingData.TotalRecords;
        articles = PagingData.Records.ToList();

        StateHasChanged();
    }
}