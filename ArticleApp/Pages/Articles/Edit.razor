@page "/Articles/Edit/{Id:int}"
@using ArticleApp.Models.Articles;
@*// 네비게이션메니저를 네비게이션메니져로 인젝션 한다. *@
@inject NavigationManager NavigationManager

@*저장하는 로직*@
@inject IArticleRepository ArticleRepository

<h3>Edit</h3>
<hr/>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <EditForm Model="Model" OnValidSubmit="btnEdit_Click">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="form-group">
                    <label for="Id">ID: </label>@Model.Id
                </div>
                <div class="form-group">
                    <label for="Title">Title</label>
                    <InputText id="Title" class="form-control" placeholder="Enter Title" @bind-Value="@Model.Title"></InputText>
                    <ValidationMessage For="@(()=>Model.Title)" class="form-text text-muted"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label for="Content">Content</label>
                    <InputTextArea id="Content" class="form-control" placeholder="Enter Content" @bind-Value="@Model.Content"></InputTextArea>
                    <ValidationMessage For="@(()=>Model.Content)" class="form-text text-muted"></ValidationMessage>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Edit</button>
                    <a href="/Articles" class="btn btn-secondary">List</a>
                </div>
            </EditForm>
        </div>

    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public Article Model { get; set; } = new Article();

    protected async Task btnEdit_Click()
    {
        // 저장로직
        await ArticleRepository.EditArticleAsync(Model);

        // 상세보기 페이지로 이동
        NavigationManager.NavigateTo($"/Articles/Details/{Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        Model = await ArticleRepository.GetArticleByIdAsync(Id);
    }
}
