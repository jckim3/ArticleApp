@using ArticleApp.Models.Articles;

@inject IArticleRepository ArticleRepository
@inject NavigationManager NavigatorManager

@inject IJSRuntime JSRuntime

<!-- Modal -->
<div class="modal" tabindex="-1" role="dialog" id="articleEditorForm">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@EditorFormTitle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="Model" OnValidSubmit="btnSubmit_Click">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <ValidationSummary></ValidationSummary>
                    <input type="hidden" @bind-value="@Model.Id" />

                    <div class="form-group">
                        <label for="Title">Title</label>
                        <InputText id="Title" class="form-control" placeholder="Enter Title" @bind-Value="@Model.Title"></InputText>
                        <ValidationMessage For="@(()=>Model.Title)" class="form-text text-muted"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label for="Content">Content</label>
                        <InputTextArea id="Content" class="form-control" placeholder="Enter Content" @bind-Value="@Model.Content"></InputTextArea>
                        <ValidationMessage For="@(()=>Model.Content)" class="form-text text-muted"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Yes</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </EditForm>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public RenderFragment EditorFormTitle { get; set; }

    [Parameter]
    public Article Model{ get; set; }

    [Parameter]
    public Action SaveOrUpdate{ get; set; }

    /// <summary>
    /// Save or Modify
    /// </summary>
    private async void btnSubmit_Click()
    {
        if( Model.Id == 0)
        {
            //Save
            await ArticleRepository.AddArticleAsync(Model);
        }
        else
        {
            await ArticleRepository.EditArticleAsync(Model);
        }
        await JSRuntime.InvokeAsync<object>("CloseModal", "articleEditorForm");
        SaveOrUpdate?.Invoke(); //넘어온 함수 포인트를 실행
    }

}
